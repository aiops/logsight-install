---
version: '3.7'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    container_name: elasticsearch${ELASTIC_VERSION}
    restart: always
    env_file:
      - .env
    environment: 
      - xpack.security.enabled=true
      - discovery.type=single-node
      - network.host=${ELASTICSEARCH_NETWORK_HOST}
      - cluster.routing.allocation.disk.threshold_enabled=false
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
    volumes:
      - 'logsight_elasticsearch:/usr/share/elasticsearch/data'
    ports:
      - "${ELASTICSEARCH_PORT}:${ELASTICSEARCH_PORT}"
    networks:
      - logsight

  kibana:
    image: docker.elastic.co/kibana/kibana:${ELASTIC_VERSION}
    container_name: kibana${ELASTIC_VERSION}
    restart: always
    env_file:
      - .env
    environment:
      - network.host=${ELASTICSEARCH_NETWORK_HOST}
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
    ports:
      - "${KIBANA_PORT}:${KIBANA_PORT}"
    depends_on:
      - elasticsearch
    networks:
      - logsight

  postgres:
    image: postgres:11
    restart: always
    env_file:
      - .env
    volumes:
      - logsight_database:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks:
      - logsight

networks:
  logsight:
    driver: bridge

volumes:
  logsight_elasticsearch:
    driver: local
  logsight_database:
    driver: local
