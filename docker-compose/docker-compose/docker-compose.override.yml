---
version: '3.7'
services:
  logsight-backend:
    image: logsight/logsight-backend:${DOCKER_IMAGE_TAG_LOGSIGHT_BACKEND}
    restart: always
    hostname:
      logsight-backend
    container_name: logsight-backend
    env_file:
      - .env
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://${POSTGRES_HOSTNAME}:${POSTGRES_PORT}/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - LOGSIGHT_URL=${LOGSIGHT_URL}
      - ACCEPT_LOGSIGHT_LICENSE=${ACCEPT_LOGSIGHT_LICENSE}
      - LOGSIGHT_DEPLOYMENT=${LOGSIGHT_DEPLOYMENT_BACKEND}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
      - LOG_SINK_CONNECTION=${LOGSIGHT_BACKEND_CONNECTOR}
    ports:
      - '${LOGSIGHT_BACKEND_PORT}:${LOGSIGHT_BACKEND_PORT}'
    networks:
      - logsight

  logsight-frontend:
    image: logsight/logsight-frontend:${DOCKER_IMAGE_TAG_LOGSIGHT_FRONTEND}
    hostname:
      logsight-frontend
    container_name: logsight-frontend
    depends_on:
      - logsight-backend
    restart: always
    env_file:
      - .env
    environment:
      - ACCEPT_LOGSIGHT_LICENSE=${ACCEPT_LOGSIGHT_LICENSE}
      - LOGSIGHT_DEPLOYMENT=${LOGSIGHT_DEPLOYMENT_FRONTEND}
    ports:
      - '${LOGSIGHT_FRONTEND_PORT}:${LOGSIGHT_FRONTEND_PORT}'
    networks:
      - logsight

  logsight-pipeline:
    image: logsight/logsight-pipeline:${DOCKER_IMAGE_TAG_LOGSIGHT_PIPELINE}
    hostname:
      logsight-pipeline
    container_name: logsight-pipeline
    depends_on:
      - logsight-backend
    restart: always
    env_file:
      - .env
    environment:
      - LOGS_STREAM_ZMQ_ENDPOINT=tcp://${LOGSIGHT_BACKEND_HOSTNAME}:${LOGS_STREAM_ZMQ_PORT}
      - ACCEPT_LOGSIGHT_LICENSE=${ACCEPT_LOGSIGHT_LICENSE}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - FILTER_NORMAL=${LOGSIGHT_STORE_ONLY_ANOMALIES}
      - PIPELINE_CONNECTION=zeromq
    networks:
      - logsight

  logsight-jobs:
    image: logsight/logsight-jobs:${DOCKER_IMAGE_TAG_LOGSIGHT_JOBS}
    restart: always
    hostname:
      logsight-jobs
    container_name: logsight-jobs
    env_file:
      - .env
    environment:
      - ACCEPT_LOGSIGHT_LICENSE=${ACCEPT_LOGSIGHT_LICENSE}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - INCIDENT_JOB_PARALLEL_JOBS=1
      - INCIDENT_JOB_INTERVAL=30
      - ES_CLEANUP_AGE=${LOGSIGHT_RETENTION_TIME}

    networks:
      - logsight

  logsight-result-api:
    image: logsight/logsight-result-api:${DOCKER_IMAGE_TAG_LOGSIGHT_RESULT_API}
    depends_on:
      - logsight-pipeline
    restart: always
    hostname:
      logsight-result-api
    container_name: logsight-result-api
    env_file:
      - .env
    environment:
      - ACCEPT_LOGSIGHT_LICENSE=${ACCEPT_LOGSIGHT_LICENSE}
      - ES_QUERY_SIZE=${VERIFICATION_COMPARE_QUERY_SIZE}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
    ports:
      - "${RESULT_API_PORT}:${RESULT_API_PORT}"
    networks:
      - logsight

networks:
  logsight:
    driver: bridge
